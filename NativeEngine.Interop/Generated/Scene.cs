/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace EvilTemple.NativeEngineInterop {

using System;
using System.Runtime.InteropServices;

public class Scene : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Scene(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Scene obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public Entity CreateEntity(string entityName, string meshFilename) {
    IntPtr cPtr = NativeEngineInteropPINVOKE.Scene_CreateEntity__SWIG_0(swigCPtr, entityName, meshFilename);
    Entity ret = (cPtr == IntPtr.Zero) ? null : new Entity(cPtr, false);
    if (NativeEngineInteropPINVOKE.SWIGPendingException.Pending) throw NativeEngineInteropPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Entity CreateEntity(string meshFilename) {
    IntPtr cPtr = NativeEngineInteropPINVOKE.Scene_CreateEntity__SWIG_1(swigCPtr, meshFilename);
    Entity ret = (cPtr == IntPtr.Zero) ? null : new Entity(cPtr, false);
    if (NativeEngineInteropPINVOKE.SWIGPendingException.Pending) throw NativeEngineInteropPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SceneNode CreateSceneNode() {
    IntPtr cPtr = NativeEngineInteropPINVOKE.Scene_CreateSceneNode__SWIG_0(swigCPtr);
    SceneNode ret = (cPtr == IntPtr.Zero) ? null : new SceneNode(cPtr, false);
    if (NativeEngineInteropPINVOKE.SWIGPendingException.Pending) throw NativeEngineInteropPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SceneNode CreateSceneNode(string name) {
    IntPtr cPtr = NativeEngineInteropPINVOKE.Scene_CreateSceneNode__SWIG_1(swigCPtr, name);
    SceneNode ret = (cPtr == IntPtr.Zero) ? null : new SceneNode(cPtr, false);
    if (NativeEngineInteropPINVOKE.SWIGPendingException.Pending) throw NativeEngineInteropPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
